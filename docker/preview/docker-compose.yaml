version: '3.7'
services:
  postgres:
    image: postgres:16.1-alpine
    container_name: postgres-${TAG}
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    networks:
      - dundring_preview
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.2-alpine
    container_name: redis-${TAG}
    networks:
      - dundring_preview
    healthcheck:
      test: ['CMD-SHELL', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    image: sivertschou/dundring-backend:${TAG}
    container_name: backend-${TAG}
    environment:
      - DATABASE_URL=postgresql://${DB_USERNAME}:${DB_PASSWORD}@postgres:5432/dundring
      - REDIS_URL=redis://redis:6379
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_USER=${MAIL_USER}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - FRONTEND_BASE_URL=https://${TAG}.dundring.com
    networks:
      - caddy
      - dundring_preview
    labels:
      caddy: ${TAG}.dundring.com
      caddy.reverse_proxy: '/api* {{upstreams 8080}}'
      caddy.tls.dns: 'cloudflare ${CLOUDFLARE_DNS_API_TOKEN}'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: on-failure:5

  frontend:
    image: sivertschou/dundring-frontend:${TAG}
    container_name: frontend-${TAG}
    networks:
      - caddy
    labels:
      caddy: ${TAG}.dundring.com
      caddy.reverse_proxy: '{{upstreams 80}}'
      caddy.tls.dns: 'cloudflare ${CLOUDFLARE_DNS_API_TOKEN}'

networks:
  dundring_preview:
  caddy:
    external: true
