name: Build and deploy

on:
  push:
    branches: [main, deploy-action]

jobs:
  build:
    name: Build, tag and push image
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.gitversion.outputs.semVer }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build, tag and push backend
        uses: docker/build-push-action@v5
        with:
          file: ./apps/backend/Dockerfile
          tags: ${{ vars.DOCKERHUB_USERNAME }}/dundring-backend:${{ steps.gitversion.outputs.semVer }}
          push: true

      - name: Build, tag and push frontend
        uses: docker/build-push-action@v5
        with:
          file: ./apps/frontend/Dockerfile
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/dundring-frontend:${{ steps.gitversion.outputs.semVer }}

      - name: Set version tag
        run: |
          git tag ${{ steps.gitversion.outputs.semVer }}
          git push origin ${{ steps.gitversion.outputs.semVer }}

  deploy-dev:
    name: Deploy dev
    environment: dev
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Deploy
        uses: ./.github/actions/deploy
        with:
          version: ${{ needs.build.outputs.version }}
          base_url: '${{ vars.BASE_URL }}'
          cloudflare_api_key: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          database_password: ${{ secrets.DATABASE_PASSWORD }}
          database_url: ${{ secrets.DATABASE_URL }}
          mail_host: ${{ secrets.MAIL_HOST }}
          mail_password: ${{ secrets.MAIL_PASSWORD }}
          mail_port: ${{ secrets.MAIL_PORT }}
          mail_user: ${{ secrets.MAIL_USER }}
          redis_url: ${{ secrets.REDIS_URL }}
          ssh_host: ${{ secrets.SSH_HOST }}
          ssh_key: ${{ secrets.SSH_KEY }}
          ssh_username: ${{ secrets.SSH_USERNAME }}
          strava_client_id: ${{ secrets.STRAVA_CLIENT_ID }}
          strava_client_secret: ${{ secrets.STRAVA_CLIENT_SECRET }}
          token_secret: ${{ secrets.TOKEN_SECRET }}

  deploy-prod:
    name: Deploy prod
    environment: prod
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Deploy
        uses: ./.github/actions/deploy
        with:
          version: ${{ needs.build.outputs.version }}
          base_url: '${{ vars.BASE_URL }}'
          cloudflare_api_key: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          database_password: ${{ secrets.DATABASE_PASSWORD }}
          database_url: ${{ secrets.DATABASE_URL }}
          mail_host: ${{ secrets.MAIL_HOST }}
          mail_password: ${{ secrets.MAIL_PASSWORD }}
          mail_port: ${{ secrets.MAIL_PORT }}
          mail_user: ${{ secrets.MAIL_USER }}
          redis_url: ${{ secrets.REDIS_URL }}
          ssh_host: ${{ secrets.SSH_HOST }}
          ssh_key: ${{ secrets.SSH_KEY }}
          ssh_username: ${{ secrets.SSH_USERNAME }}
          strava_client_id: ${{ secrets.STRAVA_CLIENT_ID }}
          strava_client_secret: ${{ secrets.STRAVA_CLIENT_SECRET }}
          token_secret: ${{ secrets.TOKEN_SECRET }}
