// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String                @id @default(uuid())
  username             String                @unique
  workouts             Workout[]
  fitnessData          FitnessData?
  mailAuthentication   MailAuthentication?
  stravaAuthentication StravaAuthentication?
}

model FitnessData {
  id     String @id @default(uuid())
  ftp    Int
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique
}

model Workout {
  id     String              @id @default(uuid())
  name   String
  parts  SteadyWorkoutPart[]
  user   User                @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
}

model SteadyWorkoutPart {
  index     Int
  duration  Int
  power     Int
  workout   Workout @relation(fields: [workoutId], references: [id], onDelete: Cascade)
  workoutId String

  @@unique([index, workoutId])
}

model MailAuthentication {
  mail   String @unique
  userId String @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model StravaAuthentication {
  athleteId          Int     @unique
  userId             String  @unique
  user               User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  refreshToken       String?
  readScope          Boolean @default(false)
  activityWriteScope Boolean @default(false)
}

model DataMigration {
  name        String   @unique
  dateApplied DateTime @default(now())
}
